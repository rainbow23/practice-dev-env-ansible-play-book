---
- name: "Set vars"
  set_fact:
    home_path: "/home/{{ ansible_user }}"
    base_clone_path: "https://github.com"

- name: "Install packages"
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - gcc
    - lua-devel
    - perl-ExtUtils-Embed
    - zlib-devel
    - bzip2
    - bzip2-devel
    - readline-devel
    - sqlite
    - sqlite-devel
    - openssl-devel
    - tmux
    - git
    - zsh
    - tree

- name: Clone repository
  git:
    repo: "{{ item.path }}"
    dest: "{{ home_path }}/{{ item.dir }}"
    force: yes
    update: no
  become_user: "{{ ansible_user }}"
  with_items:
    - { path: "{{ base_clone_path }}/wting/autojump.git",     dir: "autojump" }
    - { path: "{{ base_clone_path }}/rainbow23/dotfiles.git", dir: "dotfiles" }
    - { path: "{{ base_clone_path }}/tmux/tmux.git",          dir: "tmuxsrc" }
    - { path: "{{ base_clone_path }}/tmux-plugins/tpm",       dir: ".tmux/plugins/tpm" }
    - { path: "{{ base_clone_path }}/vim/vim",                dir: "vim8src" }
    - { path: "{{ base_clone_path }}/riywo/anyenv",           dir: ".anyenv" }
  notify:
    - Permission change to directories
    - Install autojump
    - Delete cloned directories
    # - Create symlink

- block:
  - name: .bashrcディレクトリの存在チェック
    stat:
      path: "{{ home_path }}/.bashrc"
    register: bc
  - name: Delete file at .bashrc
    file:
      path: "{{ home_path }}/.bashrc"
      state: absent
    when: bc.stat.exists == True
  - name: Create symlink
    file:
      src: "{{ home_path }}/dotfiles/_{{ item }}"
      dest: "{{ home_path }}/.{{ item }}"
      owner: "{{ ansible_user }}"
      group: wheel
      mode: 0755
      state: link
    with_items:
      - vimrc
      - bashrc
      - zshrc
      - tmux.conf

- block:
  - name: Create vim-plug folder
    file:
      path: "{{ home_path }}/.vim/autoload"
      owner: "{{ ansible_user }}"
      group: wheel
      mode: 0755
      state: directory
  - name: Install vim-plug
    get_url:
      url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      dest: "{{ home_path }}/.vim/autoload/plug.vim"
      mode: 0755
      owner: "{{ ansible_user }}"

- block:
  - name: Install pyenv from source
    shell: "curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash"
    become_user: "{{ ansible_user }}"
    args:
      executable: /bin/bash

  - name: add pyenv path to .bashrc and .zshrc
    shell: |
      echo -e '\n# pyenv' >> {{ item }}
      echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> {{ item }}
      echo 'eval "$(pyenv init -)"' >> {{ item }}
      echo 'eval "$(pyenv virtualenv-init -)"' >> {{ item }}
      exec $SHELL -l
      pyenv update
    with_items:
      - ~/.bashrc
      - ~/.zshrc
    become_user: "{{ ansible_user }}"

  - name: .pyenvディレクトリの存在チェック
    stat:
      path: "{{ home_path }}/.pyenv/versions/3.6.0"
    register: py_path
    become_user: "{{ ansible_user }}"

  - name: Pyenv install specific python version
    shell: |
      pyenv install 3.6.0
    when: py_path.stat.exists == False
    args:
      executable: /bin/bash
    become_user: "{{ ansible_user }}"


# - block:
#   - name: Compile Vim
#     shell: >
#       cd /home/{{ ansible_user }}/vim8src && ./configure
#       --enable-fail-if-missing
#       --with-features=huge
#       --disable-selinux
#       --enable-luainterp
#       --enable-perlinterp
#       --enable-python3interp vi_cv_path_python3=/home/vagrant/.pyenv/versions/3.6.0/bin/python3.6
#       --with-python3-config-dir=/home/vagrant/.pyenv/versions/3.6.0/lib/python3.6/config-3.6m-x86_64-linux-gnu
#       --enable-cscope
#       --enable-fontset
#       --enable-multibyte
#     become_user: "{{ ansible_user }}"
#     args:
#       executable: /bin/bash
#   - name: Make & install Vim
#     shell: >
#       cd /home/{{ ansible_user }}/vim8src && make
#       && make install
#     args:
#       executable: /bin/bash

- block:
  - name: /usr/local/bin/vim ディレクトリの存在チェック
    stat:
      path: /usr/local/bin/vim
    register: vim_path
  - name: Compile Vim
    shell: >
      cd {{ home_path }}/vim8src && ./configure
      --enable-fail-if-missing
      --with-features=huge
      --disable-selinux
      --enable-luainterp
      --enable-perlinterp
      --enable-python3interp vi_cv_path_python3={{ home_path }}/.pyenv/versions/3.6.0/bin/python3.6
      --with-python3-config-dir={{ home_path }}/.pyenv/versions/3.6.0/lib/python3.6/config-3.6m-x86_64-linux-gnu
      --enable-cscope
      --enable-fontset
      --enable-multibyte
    args:
      executable: /bin/bash
    become_user: "{{ ansible_user }}"
    when: vim_path.stat.exists == False

  - name: Make & install Vim
    shell: |
      cd {{ home_path }}/vim8src
      make
      make install
      git reset --hard
    when: vim_path.stat.exists == False
    args:
      executable: /bin/bash

# - block:
#   - name: Delete cloned directories
#     file:
#       path: "{{ home_path }}/{{ item }}"
#       state: absent
#     with_items:
#       - autojump
#       - tmuxsrc
#       - vim8src
